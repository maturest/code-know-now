import{_ as d,c as r,o as a,ag as e}from"./chunks/framework.C-XYIjD8.js";const l=JSON.parse('{"title":"函数的定义","description":"","frontmatter":{},"headers":[],"relativePath":"python/function.md","filePath":"python/function.md","lastUpdated":null}'),n={name:"python/function.md"};function c(o,t,h,f,u,i){return a(),r("div",null,t[0]||(t[0]=[e('<h1 id="函数的定义" tabindex="-1">函数的定义 <a class="header-anchor" href="#函数的定义" aria-label="Permalink to &quot;函数的定义&quot;">​</a></h1><table tabindex="0"><thead><tr><th>方式</th><th>特点</th><th>适用场景</th></tr></thead><tbody><tr><td>基本定义</td><td>最常见的定义方式</td><td>大多数场景</td></tr><tr><td>Lambda 函数</td><td>简洁，适合简单操作</td><td>排序、过滤、高阶函数参数</td></tr><tr><td>嵌套函数</td><td>在函数内部定义函数</td><td>封装逻辑，实现闭包</td></tr><tr><td>闭包</td><td>内部函数记住外部函数的变量</td><td>工厂函数，延迟计算</td></tr><tr><td>生成器函数</td><td>逐步生成值，节省内存</td><td>处理大量数据或无限序列</td></tr><tr><td>装饰器函数</td><td>动态修改函数的行为</td><td>日志记录、权限检查、性能测试</td></tr><tr><td>类中的方法</td><td>定义类的行为</td><td>面向对象编程</td></tr><tr><td>静态方法和类方法</td><td>不依赖对象或依赖类</td><td>工具方法，操作类属性</td></tr><tr><td>偏函数</td><td>固定函数的部分参数</td><td>简化函数调用</td></tr><tr><td>递归函数</td><td>调用自身，解决分治问题</td><td>阶乘、斐波那契数列等</td></tr></tbody></table><h1 id="函数的传参方式" tabindex="-1">函数的传参方式 <a class="header-anchor" href="#函数的传参方式" aria-label="Permalink to &quot;函数的传参方式&quot;">​</a></h1><table tabindex="0"><thead><tr><th>参数类型</th><th>语法</th><th>特点</th><th>示例</th></tr></thead><tbody><tr><td>位置参数</td><td>func(a, b)</td><td>按顺序传递</td><td>func(1, 2)</td></tr><tr><td>关键字参数</td><td>func(a=1, b=2)</td><td>按参数名传递，顺序任意</td><td>func(b=2, a=1)</td></tr><tr><td>默认参数</td><td>func(a, b=2)</td><td>参数有默认值，调用时可省略</td><td>func(1)</td></tr><tr><td>可变位置参数</td><td>func(*args)</td><td>接受任意数量的位置参数，打包成元组</td><td>func(1, 2, 3)</td></tr><tr><td>可变关键字参数</td><td>func(**kwargs)</td><td>接受任意数量的关键字参数，打包成字典</td><td>func(a=1, b=2)</td></tr><tr><td>强制关键字参数</td><td>func(a, b, *, c)</td><td>* 之后的参数必须通过关键字传递</td><td>func(1, 2, c=3)</td></tr><tr><td>解包参数</td><td>func(*args)</td><td>解包序列或字典作为参数</td><td>func(*(1, 2, 3))</td></tr></tbody></table>',4)]))}const _=d(n,[["render",c]]);export{l as __pageData,_ as default};
