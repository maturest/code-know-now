import{_ as d,c as a,o as r,ag as e}from"./chunks/framework.C-XYIjD8.js";const b=JSON.parse('{"title":"类的定义","description":"","frontmatter":{},"headers":[],"relativePath":"python/class.md","filePath":"python/class.md","lastUpdated":null}'),h={name:"python/class.md"};function o(s,t,l,n,i,c){return r(),a("div",null,t[0]||(t[0]=[e('<h1 id="类的定义" tabindex="-1">类的定义 <a class="header-anchor" href="#类的定义" aria-label="Permalink to &quot;类的定义&quot;">​</a></h1><table tabindex="0"><thead><tr><th>方式</th><th>特点</th><th>适用场景</th></tr></thead><tbody><tr><td>基本定义</td><td>最常见的定义方式</td><td>大多数场景</td></tr><tr><td>动态定义属性</td><td>运行时动态添加属性</td><td>需要灵活扩展属性的场景</td></tr><tr><td>@property</td><td>将方法变成属性，控制访问和修改</td><td>需要对属性进行控制的场景</td></tr><tr><td>@classmethod</td><td>定义类方法，绑定到类</td><td>需要操作类属性的场景</td></tr><tr><td>@staticmethod</td><td>定义静态方法，不依赖类或对象</td><td>需要定义工具方法的场景</td></tr><tr><td><strong>slots</strong></td><td>限制实例属性，减少内存占用</td><td>需要优化内存的场景</td></tr><tr><td>type 动态创建类</td><td>动态创建类</td><td>需要动态生成类的场景</td></tr><tr><td>dataclasses</td><td>简化数据类的定义</td><td>需要存储数据的场景</td></tr><tr><td>抽象类</td><td>定义接口或基类，不能被实例化</td><td>需要定义接口的场景</td></tr><tr><td>命名元组</td><td>轻量级的类，适合存储不可变数据</td><td>需要存储简单数据的场景</td></tr></tbody></table><h2 id="类属性" tabindex="-1">类属性 <a class="header-anchor" href="#类属性" aria-label="Permalink to &quot;类属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性类型</th><th>命名方式</th><th>访问权限</th><th>特点</th></tr></thead><tbody><tr><td>公有属性</td><td>name</td><td>外部可以直接访问和修改</td><td>无访问限制</td></tr><tr><td>受保护属性</td><td>_name</td><td>外部可以访问，但不推荐</td><td>提示开发者不要直接访问</td></tr><tr><td>私有属性</td><td>__name</td><td>外部无法直接访问</td><td>通过名称改写实现访问限制</td></tr><tr><td>类属性</td><td>直接定义在类中</td><td>类或对象都可以访问</td><td>所有对象共享</td></tr></tbody></table><h2 id="类方法" tabindex="-1">类方法 <a class="header-anchor" href="#类方法" aria-label="Permalink to &quot;类方法&quot;">​</a></h2><h1 id="类的继承" tabindex="-1">类的继承 <a class="header-anchor" href="#类的继承" aria-label="Permalink to &quot;类的继承&quot;">​</a></h1><h1 id="抽象类" tabindex="-1">抽象类 <a class="header-anchor" href="#抽象类" aria-label="Permalink to &quot;抽象类&quot;">​</a></h1><h1 id="接口类" tabindex="-1">接口类 <a class="header-anchor" href="#接口类" aria-label="Permalink to &quot;接口类&quot;">​</a></h1>',8)]))}const m=d(h,[["render",o]]);export{b as __pageData,m as default};
